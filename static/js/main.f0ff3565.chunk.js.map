{"version":3,"sources":["components/FeedbackOptions.jsx","components/Statistics.jsx","components/Notification.jsx","App.js","index.js","components/FeedbackOptions.module.css"],"names":["FeedbackOptions","onLeaveFeedback","state","Object","keys","map","key","type","id","className","s","button","onClick","Statistic","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Notification","App","handleIncrement","setState","prevState","target","this","reduce","acc","parseFloat","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4SAqBeA,EAlBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,gBAAiBC,EAAY,EAAZA,MAC1C,OACE,8BACGC,OAAOC,KAAKF,GAAOG,KAAI,SAACC,GAAD,OACtB,wBACEC,KAAK,SACLC,GAAIF,EAEJG,UAAWC,IAAEC,OACbC,QAASX,EALX,SAOGK,GAJIA,SCGAO,EAVG,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,KAAMC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,IAAKC,EAA0D,EAA1DA,mBAAoBC,EAAsC,EAAtCA,gCACzD,OAAQ,gCACJ,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,YCHOC,EAJM,WACjB,OAAO,sDCILC,E,4MAUJlB,MAAQ,CACNY,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,gBAAkB,SAACV,GACjB,EAAKW,UAAS,SAACC,GAAD,sBACXZ,EAAOa,OAAOhB,GAAKe,EAAUZ,EAAOa,OAAOhB,IAAM,O,4CAItD,WAAU,IAAD,OACDS,EAAqBd,OAAOC,KAAKqB,KAAKvB,OAAOwB,QACjD,SAACC,EAAKrB,GAAN,OAAcqB,EAAMC,WAAW,EAAK1B,MAAMI,IAAQ,KAClD,GAEIY,EACe,IAAlBO,KAAKvB,MAAMY,KAAcG,EAC5B,OACE,sBAAKR,UAAU,YAAf,UACE,uDACA,cAAC,EAAD,CACER,gBAAiBwB,KAAKJ,gBACtBnB,MAAOuB,KAAKvB,QAEd,4CACCe,EAAqB,EACpB,cAAC,EAAD,CACEH,KAAMW,KAAKvB,MAAMY,KACjBC,QAASU,KAAKvB,MAAMa,QACpBC,IAAKS,KAAKvB,MAAMc,IAChBC,mBAAoBA,EACpBC,gCAAiCA,IAGnC,cAAC,EAAD,W,GA9CQW,aAqDHT,ICvDfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.f0ff3565.chunk.js","sourcesContent":["import React from \"react\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ onLeaveFeedback, state }) => {\n  return (\n    <div>\n      {Object.keys(state).map((key) => (\n        <button\n          type=\"button\"\n          id={key}\n          key={key}\n          className={s.button}\n          onClick={onLeaveFeedback}\n        >\n          {key}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n\n","import React from \"react\";\r\n\r\n\r\nconst Statistic = ({ good, neutral, bad, countTotalFeedback, countPositiveFeedbackPercentage }) => {\r\n    return (<div>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {countTotalFeedback} </p>\r\n        <p>Positive feedback: {countPositiveFeedbackPercentage} %</p>\r\n    </div>)\r\n}\r\n\r\nexport default Statistic;","import React from \"react\";\r\n\r\nconst Notification = () => {\r\n    return <p>There is no feedback</p>\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistic from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\nimport PropTypes from \"prop-types\";\n\nclass App extends Component {\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    countTotalFeedback: PropTypes.number,\n    countPositiveFeedbackPercentage: PropTypes.number,\n    onIncrement: PropTypes.func,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = (button) => {\n    this.setState((prevState) => ({\n      [button.target.id]: prevState[button.target.id] + 1,\n    }));\n  };\n\n  render() {\n    const countTotalFeedback = Object.keys(this.state).reduce(\n      (acc, key) => acc + parseFloat(this.state[key] || 0),\n      0\n    );\n    const countPositiveFeedbackPercentage =\n      (this.state.good * 100) / countTotalFeedback;\n    return (\n      <div className=\"container\">\n        <h1>Please leave feedback</h1>\n        <FeedbackOptions\n          onLeaveFeedback={this.handleIncrement}\n          state={this.state}\n        />\n        <h2>Statistics</h2>\n        {countTotalFeedback > 0 ? (\n          <Statistic\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            countTotalFeedback={countTotalFeedback}\n            countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1azrX\"};"],"sourceRoot":""}