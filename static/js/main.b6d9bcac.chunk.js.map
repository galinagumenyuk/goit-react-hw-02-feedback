{"version":3,"sources":["components/FeedbackOptions.jsx","components/Statistics.jsx","components/Notification.jsx","App.js","index.js","components/FeedbackOptions.module.css"],"names":["FeedbackOptions","onIncrementGood","onIncrementNeutral","onIncrementBad","type","className","s","button","onClick","Statistic","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Notification","App","state","handleIncrementGood","setState","prevState","handleIncrementNeutral","handleIncrementBad","Object","keys","this","reduce","acc","key","parseFloat","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qSAkBeA,EAfS,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,gBAAiBC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,eAC3D,OACI,gCACE,wBAAQC,KAAK,SAASC,UAAWC,IAAEC,OAAQC,QAASP,EAApD,kBAGA,wBAAQG,KAAK,SAASC,UAAWC,IAAEC,OAAQC,QAASN,EAApD,qBAGA,wBAAQE,KAAK,SAASC,UAAWC,IAAEC,OAAQC,QAASL,EAApD,qBCCKM,EAVG,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,KAAMC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,IAAKC,EAA0D,EAA1DA,mBAAoBC,EAAsC,EAAtCA,gCACzD,OAAQ,gCACJ,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,YCHOC,EAJM,WACjB,OAAO,sDCGLC,E,4MACJC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,oBAAsB,WACpB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEV,KAAMU,EAAUV,KAAO,O,EAGzDW,uBAAyB,WACvB,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAAET,QAASS,EAAUT,QAAU,O,EAG/DW,mBAAqB,WACnB,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAAER,IAAKQ,EAAUR,IAAM,O,4CAGvD,WAAU,IAAD,OACDC,EAAqBU,OAAOC,KAAKC,KAAKR,OAAOS,QACjD,SAACC,EAAKC,GAAN,OAAcD,EAAME,WAAW,EAAKZ,MAAMW,IAAQ,KAClD,GAEId,EACe,IAAlBW,KAAKR,MAAMP,KAAcG,EAC5B,OACE,sBAAKR,UAAU,YAAf,UACE,uDACA,cAAC,EAAD,CACEJ,gBAAiBwB,KAAKP,oBACtBhB,mBAAoBuB,KAAKJ,uBACzBlB,eAAgBsB,KAAKH,qBAEvB,4CACCT,EAAqB,EACpB,cAAC,EAAD,CACEH,KAAMe,KAAKR,MAAMP,KACjBC,QAASc,KAAKR,MAAMN,QACpBC,IAAKa,KAAKR,MAAML,IAChBC,mBAAoBA,EACpBC,gCAAiCA,IAGnC,cAAC,EAAD,W,GA5CQgB,aAmDHd,ICpDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.b6d9bcac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({onIncrementGood, onIncrementNeutral, onIncrementBad }) => {\r\n    return (\r\n        <div>\r\n          <button type=\"button\" className={s.button} onClick={onIncrementGood}>\r\n            Good\r\n          </button>\r\n          <button type=\"button\" className={s.button} onClick={onIncrementNeutral}>\r\n            Neutral\r\n          </button>\r\n          <button type=\"button\" className={s.button} onClick={onIncrementBad}>\r\n            Bad\r\n          </button>\r\n        </div>)\r\n}\r\n\r\nexport default FeedbackOptions;","import React from \"react\";\r\n\r\n\r\nconst Statistic = ({ good, neutral, bad, countTotalFeedback, countPositiveFeedbackPercentage }) => {\r\n    return (<div>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {countTotalFeedback} </p>\r\n        <p>Positive feedback: {countPositiveFeedbackPercentage} %</p>\r\n    </div>)\r\n}\r\n\r\nexport default Statistic;","import React from \"react\";\r\n\r\nconst Notification = () => {\r\n    return <p>There is no feedback</p>\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistic from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrementGood = () => {\n    this.setState((prevState) => ({ good: prevState.good + 1 }));\n  };\n\n  handleIncrementNeutral = () => {\n    this.setState((prevState) => ({ neutral: prevState.neutral + 1 }));\n  };\n\n  handleIncrementBad = () => {\n    this.setState((prevState) => ({ bad: prevState.bad + 1 }));\n  };\n\n  render() {\n    const countTotalFeedback = Object.keys(this.state).reduce(\n      (acc, key) => acc + parseFloat(this.state[key] || 0),\n      0\n    );\n    const countPositiveFeedbackPercentage =\n      (this.state.good * 100) / countTotalFeedback;\n    return (\n      <div className=\"container\">\n        <h1>Please leave feedback</h1>\n        <FeedbackOptions\n          onIncrementGood={this.handleIncrementGood}\n          onIncrementNeutral={this.handleIncrementNeutral}\n          onIncrementBad={this.handleIncrementBad}\n        />\n        <h2>Statistics</h2>\n        {countTotalFeedback > 0 ? (\n          <Statistic\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            countTotalFeedback={countTotalFeedback}\n            countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1azrX\"};"],"sourceRoot":""}